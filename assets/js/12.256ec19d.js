(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{503:function(s,a,t){"use strict";t.r(a);var e=t(3),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("在微服务的开发练习时候往往会用到虚拟机，而Docker则方便我们管理各种镜像资源，虚拟机中的虚拟机")])]),s._v(" "),t("h3",{attrs:{id:"docker的安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker的安装"}},[s._v("#")]),s._v(" Docker的安装")]),s._v(" "),t("p",[s._v("以CentOS7为例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装Docker")]),s._v("\nsystemctl start docker "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动Docker")]),s._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将Docker服务设为开机启动")]),s._v("\n")])])]),t("h3",{attrs:{id:"基操"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基操"}},[s._v("#")]),s._v(" 基操")]),s._v(" "),t("h4",{attrs:{id:"_1-镜像操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-镜像操作"}},[s._v("#")]),s._v(" 1.镜像操作")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker serach 镜像名 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检索镜像")]),s._v("\ndocker pull 镜像名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像，[:tag]可选，tag代表软件版本，默认为latest")]),s._v("\ndocker images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所以本地镜像")]),s._v("\ndocker rmi IMAGE_ID "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据image id删除本地镜像")]),s._v("\n")])])]),t("h4",{attrs:{id:"_2-容器操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-容器操作"}},[s._v("#")]),s._v(" 2.容器操作")]),s._v(" "),t("h5",{attrs:{id:"_2-1-容器常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-容器常用命令"}},[s._v("#")]),s._v(" 2.1.容器常用命令")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run --name CONTAINER_NAME -d IMAGE_NAME -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行容器，IMAGE_NAME：指定镜像模板；--name：自定义容器名CONTAINER_NAME；-d：后台运行；-p：主机端口:容器内部端口")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看运行中的容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有容器")]),s._v("\ndocker start CONTAINER_NAME/CONTAINER_ID "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\ndocker stop CONTAINER_NAME/CONTAINER_ID "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" CONTAINER_NAME/CONTAINER_ID "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除容器")]),s._v("\ndocker logs CONTAINER_NAME/CONTAINER_ID "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器日志")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it CONTAINER_NAME/CONTAINER_ID /bin/bash "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入到容器")]),s._v("\n")])])]),t("h5",{attrs:{id:"_2-2-容器参数解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-容器参数解析"}},[s._v("#")]),s._v(" 2.2.容器参数解析")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("-t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在新容器内指定一个伪终端或终端")]),s._v("\n-i "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许对容器内的标准输入 (STDIN) 进行交互")]),s._v("\n-d "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认不会进入容器，容器启动后会进入后台")]),s._v("\n-P "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将容器内部使用的网络端口随机映射到我们使用的主机上")]),s._v("\n-f "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让 docker logs 像使用 tail -f 一样来输出容器内部的标准输出")]),s._v("\n")])])]),t("h5",{attrs:{id:"_2-3-常用镜像容器运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-常用镜像容器运行"}},[s._v("#")]),s._v(" 2.3.常用镜像容器运行")]),s._v(" "),t("p",[s._v("mysql的容器在运行的时候需要指定密码，以我安装的5.7版本为例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -itd --name mysql -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root mysql:5.7.32\n")])])]),t("p",[s._v("若容器需要开机自动启动或取消自动启动，则可以使用如下指令：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker update mysql --restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开机自动启动")]),s._v("\ndocker update mysql --restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("no "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消开机自动启动")]),s._v("\n")])])]),t("p",[s._v("安装redis")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -itd --name redis -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 redis\n")])])]),t("p",[s._v("安装mongodb")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -itd --name mongo -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("27017")]),s._v(":27017 mongo\n")])])]),t("p",[s._v("安装rabbitmq")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d --name rabbitmq -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5672")]),s._v(":5672 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15672")]),s._v(":15672 rabbitmq\n")])])]),t("h5",{attrs:{id:"_2-4-更新镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-更新镜像"}},[s._v("#")]),s._v(" 2.4.更新镜像")]),s._v(" "),t("p",[s._v("在更新镜像之前，先需要启动容器，然后在容器内执行：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新完成后退出容器")]),s._v("\ndocker commit CONTAINER_ID REPOSITORY:TAG\n")])])]),t("h5",{attrs:{id:"_2-5-容器与主机之间数据拷贝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-容器与主机之间数据拷贝"}},[s._v("#")]),s._v(" 2.5.容器与主机之间数据拷贝")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" CONTAINER:SRC_PATH DEST_PATH\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" SRC_PATH CONTAINER:DEST_PATH\nOPTIONS: -L:保持源目标中的链接\n")])])]),t("h3",{attrs:{id:"使用国内镜像加速下载速度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用国内镜像加速下载速度"}},[s._v("#")]),s._v(" 使用国内镜像加速下载速度")]),s._v(" "),t("p",[s._v("修改"),t("code",[s._v("/etc/docker/daemon.json")]),s._v("文件：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/docker/daemon.json\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将下面内容添加到这个文件中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://hccwwfjl.mirror.aliyuncs.com"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"与vmware端口映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与vmware端口映射"}},[s._v("#")]),s._v(" 与VMware端口映射")]),s._v(" "),t("p",[s._v("由于我是使用两台计算机进行学习和练习，其中一台安装了虚拟机的宿主机需要配置防火墙的入站规则以便另外局域网内的机器访问：")]),s._v(" "),t("p",[s._v("这台宿主机是Windows10系统，在系统设置中，找到"),t("code",[s._v("网络和Internet")]),s._v("，点击"),t("code",[s._v("Windows防火墙")]),s._v("，找到"),t("code",[s._v("高级设置")]),s._v("，里面的"),t("code",[s._v("入站规则")]),s._v("中新建一个规则：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("规则类型")]),s._v("选择"),t("code",[s._v("自定义")]),s._v("，下一步，")]),s._v(" "),t("li",[t("code",[s._v("程序")]),s._v("选择"),t("code",[s._v("所有程序")]),s._v("，下一步，")]),s._v(" "),t("li",[t("code",[s._v("协议和端口")]),s._v("保持默认任何，下一步，")]),s._v(" "),t("li",[t("code",[s._v("作用域")]),s._v("的本地IP地址中我添加了局域网内的主机ip，下一步，")]),s._v(" "),t("li",[t("code",[s._v("操作")]),s._v("选择"),t("code",[s._v("允许连接")]),s._v("，下一步，")]),s._v(" "),t("li",[t("code",[s._v("配置文件")]),s._v("默认选中所有，下一步，"),t("code",[s._v("名称")]),s._v("取一下即可，添加完成后启动规则即可")])]),s._v(" "),t("p",[s._v("打开VMware的"),t("code",[s._v("虚拟机网络编辑器")]),s._v("，点击"),t("code",[s._v("VMnet8")]),s._v("的网卡，点击"),t("code",[s._v("NAT设置")]),s._v("，"),t("code",[s._v("端口转发")]),s._v("中添加一些应用程序的访问规则，例如MySql的：")]),s._v(" "),t("p",[s._v("主机端口：3306，类型：TCP，虚拟机IP地址：192.168.142.180:3306")]),s._v(" "),t("p",[s._v("这样，在局域网的主机就能通过连接宿主机的ip来访问到虚拟机里面docker容器的数据库了，注意的是连接"),t("code",[s._v("宿主机")]),s._v("的ip，并非"),t("code",[s._v("虚拟机")]),s._v("的")])])}),[],!1,null,null,null);a.default=r.exports}}]);